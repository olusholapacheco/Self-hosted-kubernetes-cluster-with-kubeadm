name: Deploy Kubernetes Cluster using Kubeadm and AWS EC2s

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.11

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Remove existing Terraform files
      run: |
        rm -rf .terraform
        rm -f terraform.tfstate terraform.tfstate.backup

    - name: Verify S3 Bucket Existence
      run: aws s3api head-bucket --bucket my-terraform-state-bucket20124 || exit 1

    - name: Initialize Terraform
      run: terraform init -backend-config="bucket=my-terraform-state-bucket20124" -backend-config="key=my-my-terraform-state-bucket2024/terraform.tfstate" -backend-config="region=us-east-2" -backend-config="dynamodb_table=terraform-locks"

    - name: Apply Terraform
      run: terraform apply -auto-approve

    - name: Generate SSH key
      run: |
        if [ -f id_rsa ]; then rm -f id_rsa id_rsa.pub; fi
        ssh-keygen -t rsa -b 4096 -f id_rsa -q -N ""
        cat id_rsa.pub > public_key.pem
        cat id_rsa > private_key.pem

    - name: Add SSH key
      run: |
        mkdir -p ~/.ssh
        cat private_key.pem > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Extract master IP
      run: |
        MASTER_IP=$(terraform output -json master_public_ip | jq -r '.value')
        echo "MASTER_IP=${MASTER_IP}" >> $GITHUB_ENV

    - name: Extract worker IPs
      run: |
        WORKER_IPS=$(terraform output -json worker_public_ips | jq -r '.[]')
        echo "WORKER_IPS=${WORKER_IPS}" >> $GITHUB_ENV

    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Set up master node
      run: |
        scp -o StrictHostKeyChecking=no setup_k8s.sh root@$MASTER_IP:/root/
        ssh -o StrictHostKeyChecking=no root@$MASTER_IP 'chmod +x /root/setup_k8s.sh && /root/setup_k8s.sh'

    - name: Set up worker nodes
      run: |
        for IP in $WORKER_IPS; do
          scp -o StrictHostKeyChecking=no setup_k8s.sh root@$IP:/root/
          ssh -o StrictHostKeyChecking=no root@$IP 'chmod +x /root/setup_k8s.sh && /root/setup_k8s.sh'
        done

   
    # - name: Terraform Destroy
    #   run: terraform destroy -auto-approve